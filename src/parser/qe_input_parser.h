#ifndef QEPARSER_H
#define QEPARSER_H

#include <string>
#include "phonon_h0.h"
#include "context.h"
#include "electron_h0_fourier.h"
#include "electron_h0_wannier.h"

/** Class used to parse the raw data from quantum Espresso
 *
 */
class QEParser {
public:
	/** parsing of the force constants.
	 * @param fileName: name of the file generated by q2r.x containing the
	 * force constants
	 * @return sdt::tuple < Crystal, PhononH0 >: where crystal is the class with the
	 * information on the crystal structure, and PhononH0 is the class
	 * containing the force Constants and the functionality to compute the
	 * phonon energies.
	 */
	std::tuple<Crystal, PhononH0> parsePhHarmonic(Context & context);

	/** parsing of the electronic band structure.
	 * @return sdt::tuple < Crystal, FullPoints, ElectronH0Spline >: where
	 * crystal is
	 * the class with the information on the crystal structure, FullPoints
	 * is the class with the coarse grid of k-points, and ElectronH0Spline
	 * contains the band structure and the functionality to get the electronic
	 * energy at an arbitrary k-point.
	 */
	std::tuple<Crystal,ElectronH0Fourier> parseElHarmonicFourier(
			Context & context);
	std::tuple<Crystal,ElectronH0Wannier> parseElHarmonicWannier(
			Context & context);
//	std::tuple<std::unique_ptr<Crystal>,
//			std::unique_ptr<ElectronH0Fourier>> parseElHarmonicFourier(
//			Context & context);
//	std::tuple<std::unique_ptr<Crystal>,
//			std::unique_ptr<ElectronH0Wannier>> parseElHarmonicWannier(
//			Context & context);
	bool isQuantumEspressoXml(const std::string & fileName);

};

#endif

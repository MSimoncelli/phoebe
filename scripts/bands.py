#!/usr/bin/env python3
import json
import matplotlib.pyplot as plt
import numpy as np
import argparse

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="Plot the band structure that"
                                     " has been generated by Phoebe")
    parser.add_argument("INPUT",
                        help="Name of the JSON file with band structure")
    args = parser.parse_args()
    
    # load in the json output
    jfileName = args.INPUT
    with open(jfileName) as jfile:
        data = json.load(jfile)

    # unpack the json file
    try:
        pathLabels = data['highSymLabels']
    except KeyError:
        raise KeyError("highSymLabels not found. "
                       "Are you using the correct input json file?")
        
    points = np.array(data['wavevectorIndices'])
    numBands = data['numBands']
    energies = np.array(data['energies'])

    pathTicks = data['highSymIndices']

    # plot some vertical lines at high sym points
    plt.figure(figsize=(5.5,5))
    for i in pathTicks:
        plt.axvline(i, color='grey')

    # if fermiLevel as set in the input file,
    # we can also read it in and plot it
    if('fermiLevel' in data):
        mu = data['fermiLevel']
        plt.axhline(0, color='grey', ls='--')
        energyLabel = r'E-E$_F$ [' + data['energyUnit'] +']'
    # if it wasn't set, we won't subtract
    # anything from the band energies
    else:
        mu = 0
        energyLabel = r'Energy [' + data['energyUnit'] +']'

    # plot the bands
    for i in range(numBands):
        plt.plot(points, energies[:,i] - mu, lw=2, color='royalblue')

    # plot aesthetics
    plt.xticks(pathTicks,pathLabels,fontsize=12)
    plt.yticks(fontsize=12)
    plt.ylabel(energyLabel,fontsize=14)
    plt.ylim(None, None)
    plt.xlim(points[0],points[-1])
    
    plt.tight_layout()

    plotFileName = "./" + jfileName.rstrip(".json")+".pdf"
    plt.savefig(plotFileName)
    plt.show(block=False)
